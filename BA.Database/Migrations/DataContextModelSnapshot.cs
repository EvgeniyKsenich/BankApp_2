// <auto-generated />
using BA.Database.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace BA.Database.Migrations
{
    [DbContext(typeof(DataContext.DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BA.Database.Enteties.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Balance");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("BA.Database.Enteties.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountInitiatorId");

                    b.Property<int>("AccountRecipientId");

                    b.Property<DateTime>("Date");

                    b.Property<double>("Summa");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("AccountInitiatorId");

                    b.HasIndex("AccountRecipientId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("BA.Database.Enteties.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Surname")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BA.Database.Enteties.Account", b =>
                {
                    b.HasOne("BA.Database.Enteties.User", "User")
                        .WithMany("Accounts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BA.Database.Enteties.Transaction", b =>
                {
                    b.HasOne("BA.Database.Enteties.Account", "AccountInitiator")
                        .WithMany("Initiator")
                        .HasForeignKey("AccountInitiatorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BA.Database.Enteties.Account", "AccountRecipient")
                        .WithMany("Recipient")
                        .HasForeignKey("AccountRecipientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
